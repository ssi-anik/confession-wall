type Query {
    hello: String!
    custom_resolver: String! @field(resolver: "App\\GraphQL\\Queries\\HelloQuery")
    custom_resolver_with_method: String! @field(resolver: "App\\GraphQL\\Queries\\HelloQuery@methodNameHere")
    greet (name: String!): String! @field(resolver: "App\\GraphQL\\Queries\\Greet")
    greet_with_optional_age (name: String!, age: Int): String @field(resolver: "App\\GraphQL\\Queries\\GreetWithAge")
    greet_with_default_value (name: String = "Default value on server side"): String! @field(resolver: "App\\GraphQL\\Queries\\Greet")

    userSetting: UserSetting! @guard @field(resolver: "App\\GraphQL\\Queries\\UserSettings")
}

type Mutation {
    login(input: LoginInput! @spread): AuthPayload! @field(resolver: "App\\GraphQL\\Mutations\\UserLogin")
    createAccount(input: CreateAccountInput! @spread): Message! @field(resolver: "App\\GraphQL\\Mutations\\CreateAccount")
    refreshToken: LoginPayload! @field(resolver: "App\\GraphQL\\Mutations\\RefreshToken") @guard(with: ["api"])

    updateSetting(input: UserSettingInput! @spread): Message! @field(resolver: "App\\GraphQL\\Mutations\\UpdateSetting") @guard(with: ["api"])
}

#import inputs.graphql
#import types.graphql
